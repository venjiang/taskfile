# https://taskfile.dev

version: '3'

output: prefixed
silent: true

vars:
  Version: 
    sh: git describe --always --tags --dirty
  Date:
    sh: git show -s --format=%cs {{.Commit}}
  Commit:
    sh: git rev-parse --short HEAD
  Module:
    sh: go list -m
  Pwd:
    sh: pwd
  ReleaseDir: release 
  Name:  "{{osBase .Pwd}}" 
  ExeName: '{{.Name}}{{exeExt}}'
  ExeDir: "{{.Pwd}}" 
  ExeSource: "main.go"

tasks:
  build:
    desc: go build 
    cmds:
      - echo "{{.Name}} {{.Version}}({{.Date}}) building..."
      - go build -v -o {{.ExeDir}}/{{.ExeName}} -ldflags "-s -w -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" {{.ExeDir}}/{{.ExeSource}}
      - echo "{{.Name}} {{.Version}}({{.Date}}) built."
    generates:
      - "{{.ExeDir}}/{{.ExeName}}"
    sources:
      - "**/*.go"
    method: none
    silent: true

  install:
    desc: go install 
    deps: []
    dir: .
    cmds:
      - echo "{{.Name}} {{.Version}}({{.Date}}) install..."
      - go install -ldflags "-s -w -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" 
      - echo "{{.Name}} {{.Version}}({{.Date}}) is installed."
    silent: true

  release:
    desc: go release 
    cmds:
      - echo "{{.Name}} {{.Version}}({{.Date}}) release..."
      - GOOS=darwin GOARCH=amd64 go build -ldflags "-w -s -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" -o {{.ReleaseDir}}/{{.Name}}_{{.Version}}_mac {{.ExeSource}}
      - GOOS=linux GOARCH=amd64 go build -ldflags "-w -s -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" -o {{.ReleaseDir}}/{{.Name}}_{{.Version}}_linux {{.ExeSource}}
      - GOOS=windows GOARCH=amd64 go build -ldflags "-w -s -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" -o {{.ReleaseDir}}/{{.Name}}_{{.Version}}_windows.exe {{.ExeSource}}
      - echo "{{.Name}} {{.Version}}({{.Date}}) is released."
    silent: true

  exec:
    desc: 'go build & run' 
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}}"
    silent: false

  run:
    desc: go run 
    cmds:
      - "go run {{.ExeSource}} {{.CLI_ARGS}}"
    silent: false

  test:
    cmds:
      - go test ./...
    silent: true

  version:
    desc: "print version"
    cmds: 
      - echo "{{.Name}} Version {{.Version}}({{.Date}})"
    silent: true

  clean:
    desc: "clean"
    cmds: 
      - echo 'cleaning...'
      - rm -rf ./example/source/source{{exeExt}}
      - rm -rf ./example/flow/sl.*
      - rm -rf ./example/sink/sink{{exeExt}}
      - rm -rf ./yomo/yomo{{exeExt}}
      - rm -rf ./release
      - echo 'clean.'
    silent: true

  os:
    desc: "print OS infomation"
    cmds:
      - echo "{{OS}}-{{ARCH}}"
    silent: false

  pwd:
    desc: "print current working directory"
    cmds:
      - echo "{{.Pwd}}"
      - echo "{{osBase .Pwd}}"
    silent: true
